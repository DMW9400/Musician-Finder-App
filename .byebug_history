exit
@user
exit
params[:id]
id
params[:id]
exit
localStorage
decoded_token
User.find_by(id:2)
@current_user
token
token_user_id
@user
exit
user.seeking_instruments
relevant_user_instrument.update(:seeking => false)
relevant_user_instrument = user.user_instruments.find_by instrument_id: relInst[:id]
user.user_instruments
user.instruments
user
exit
User.last.instruments
User.last.instrucments
User.last
user
relevant_instruments
rel_inst_ids
User.create(name: params[:name], password: params[:password])
params
User.create(user_params)
user_params
user
exit
UserInstrument.all.last
user.instruments
relInst
user.user_instruments
exit
!!!
relevant_user_instrument
relInst
exit
user.errors
user.valid?
user.id
relevant_user_instrument
relevant_user_instrument = UserInstrument.all.find_by user_id: user.id, instrument_id: relInst[:id]
user
relInst
exit
test.errors
test.save
test
test = User.new(user_params)
inst2=Instrument.last
inst1=Instrument.first
params
user.find_or_create_by(user_params).valid
 user = User.find_or_create_by(user_params)
user_params
user.id
relevant_user_instrument
relInst[:name]
exit
       render json: {'token': token }
      token = issue_token({ 'user_id': user.id })
token = issue_token({ 'user_id': u.id })
user && user.authenticate(params[:password])
user = User.find_by(name: params[:username])
params[:username]
user = User.find_by(username: params[:username])
exit
next
params
